name: Build, Push, and Deploy to EKS

on:
  push:
    branches:
      - main

env:
  # Note: Use distinct app names to avoid overwriting images in ECR
  NODE_APP_NAME: nodejs-hello-app
  GO_APP_NAME: go-hello-app
  IMAGE_REGISTRY: xxxxxxxxx.dkr.ecr.ap-southeast-3.amazonaws.com # Replace with your ECR URL
  AWS_REGION: ap-southeast-3
  KUBENAMESPACE: <namespace-kubernetes-name> # Replace with your K8s namespace
  KUBECLUSTER: <cluster-kubernetes-name>   # Replace with your EKS cluster name

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get-sha.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get Short Git SHA as Image Tag
        id: get-sha
        run: echo "version=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

      - name: Build and push Node.js image
        uses: docker/build-push-action@v4
        with:
          context: ./nodejs-app
          file: ./nodejs-app/Dockerfile
          push: true
          tags: ${{ env.IMAGE_REGISTRY }}/${{ env.NODE_APP_NAME }}:${{ steps.get-sha.outputs.version }}

      - name: Build and push Go image
        uses: docker/build-push-action@v4
        with:
          context: ./go-app
          file: ./go-app/Dockerfile
          push: true
          tags: ${{ env.IMAGE_REGISTRY }}/${{ env.GO_APP_NAME }}:${{ steps.get-sha.outputs.version }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.KUBECLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update Kubernetes manifests with new image tag
        run: |
          cd ./kubernetes
          kustomize edit set image ${{ env.IMAGE_REGISTRY }}/${{ env.NODE_APP_NAME }}=${{ env.IMAGE_REGISTRY }}/${{ env.NODE_APP_NAME }}:${{ needs.build-and-push.outputs.image_tag }}
          kustomize edit set image ${{ env.IMAGE_REGISTRY }}/${{ env.GO_APP_NAME }}=${{ env.IMAGE_REGISTRY }}/${{ env.GO_APP_NAME }}:${{ needs.build-and-push.outputs.image_tag }}

      - name: Deploy to Kubernetes using Kustomize
        run: |
          kustomize build ./kubernetes | kubectl apply -f -
          kubectl -n ${{ env.KUBENAMESPACE }} rollout status deployment/${{ env.NODE_APP_NAME }}
          kubectl -n ${{ env.KUBENAMESPACE }} rollout status deployment/${{ env.GO_APP_NAME }}
